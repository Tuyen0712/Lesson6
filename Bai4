class Box{
private:
  int l;
  int b;
  int h;
  public:
  Box(int length, int breath, int height);
  Box();
  Box(Box& B);
  int getLength();
  int getBreadth();
  int getHeight();  
  long long CalculateVolume();
  friend bool operator < (const Box& A, const Box& B);
  friend ostream& operator <<(ostream& os, const Box& B);

};

Box::Box(){
    l =0;
    b = 0; 
    h = 0;
}
Box::Box(int length, int breath, int height){
    l = length;
    b= breath;
    h = height;
}
Box::Box(Box& B){
    l = B.l;
    b = B.b;
    h = B.h;
}
int Box::getLength(){
    return l;
}
int Box::getBreadth(){
    return b;
}
int Box::getHeight(){
    return h;
}
long long Box::CalculateVolume(){
    return (long long)l*b*h;
}

 bool operator < (const Box& A, const Box& B){
    if (A.l < B.l){
        return true;
    }
    if (A.b < B.b && A.l == B.l) return true;
    if (A.h < B.h && A.b == B.b && A.h == B.h) return true;
    
    return false;
}
 ostream& operator <<(ostream& os, const Box& B){
    os<<B.l<<' '<<B.b<<' '<<B.h;
    return os;
}
